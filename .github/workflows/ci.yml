name: ci

on:
  push:
    paths:
      - "**.py"
      - "**.nml"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci.yml"
# paths ignore starting with "!"
      - "!ci.cmake"


jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        include:
          - gen: matlab
            cpp: false
          - gen: python
            cpp: false
            pyversion: '3.8'
          - gen: python
            cpp: true
            pyversion: '3.8'
          - gen: none
            cpp: false

    steps:

    - name: Git Checkout GemCI
      uses: actions/checkout@v3

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v3
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install Prereqs
      run: |
        sudo apt update
        sudo $(cmake -P gemext/scripts/requirements.cmake) libmumps-dev

    - name: Install model libraries
      timeout-minutes: 15
      run: |
        cmake -S gemext -B gemext/build -Dfind:BOOL=true -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }}
        cmake --build gemext/build --target ffilesystem glow iniparser msis --parallel
        cmake --install gemext/build

# --- Python
    - name: Setup Python ${{ matrix.pyversion }}
      if: ${{ matrix.gen == 'python' }}
      uses: actions/setup-python@v4
      with:
        python-version: '${{ matrix.pyversion }}'

    - name: Checkout PyGemini
      if: ${{ matrix.gen == 'python' }}
      uses: actions/checkout@v3
      with:
        repository: gemini3d/pygemini
        path: pygemini

    - name: install PyGemini
      if: ${{ matrix.gen == 'python' }}
      run: python -m pip install -e ./pygemini

    - name: Configure C++=${{ matrix.cpp }} Python=${{ matrix.python }}
      run: >-
        cmake --preset default
        -Dcpp:BOOL=${{ matrix.cpp }}
        -Dpython:BOOL=${{ matrix.python }}
        -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}

# --- Matlab

    - name: Install MATLAB
      if: ${{ matrix.gen == 'matlab' }}
      uses: matlab-actions/setup-matlab@v1

    - name: Checkout MatGemini
      if: ${{ matrix.gen == 'matlab' }}
      uses: actions/checkout@v3
      with:
        repository: gemini3d/mat_gemini
        path: mat_gemini
        submodules: true

    - name: Configure with Matlab
      if: ${{ matrix.gen == 'matlab' }}
      run: >-
        cmake --preset matlab
        -Dcpp:BOOL=${{ matrix.cpp }}
        -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
      env:
        MATGEMINI: ${{ github.workspace }}/mat_gemini

# --- build

    - name: build Gemini3D
      run: cmake --build build --parallel

    - name: Run Bounds check
      run: ctest --preset default -R run_bounds_check -E 3D
      env:
        CMAKE_PREFIX_PATH: ${{ runner.temp }}
